name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
#teste2
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_URI }}

      - name: Get short commit hash
        id: get-commit
        run: echo "::set-output name=hash::$(git rev-parse --short=5 HEAD)"

      - name: Build and push Docker image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          IMAGE_TAG: ${{ steps.get-commit.outputs.hash }}
          REPOSITORY_URI: ${{ secrets.ECR_URI }}
        run: |
          cd Docker
          docker build -t $REPOSITORY_URI:$IMAGE_TAG .
          docker push $REPOSITORY_URI:$IMAGE_TAG


  security:
    runs-on: ubuntu latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_URI }}

      - name: Pull Docker image from ECR
        run: |
          docker pull ${{ secrets.ECR_URI }}:${{ steps.git-info.outputs.BRANCH }}-${{ steps.git-info.outputs.HASH }}

    # Job 2: Snyk Security Scan
  securiti:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout do código
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Log in no Amazon ECR
    - name: Log in to Amazon ECR
      env:
        AWS_REGION: us-east-1
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_URI }}

    # 3. Pull da imagem do ECR
    - name: Pull Docker image from ECR
      run: |
        docker pull ${{ secrets.ECR_URI }}

    # 4. Instalação do Snyk CLI
    - name: Install Snyk CLI
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        npm install -g snyk
        snyk auth $SNYK_TOKEN

    # 5. Executar o Snyk Scan
    - name: Snyk Docker Scan
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        snyk container test ${{ secrets.ECR_URI }} || true
      shell: bash
  
  apllication:
    runs-on: ubuntu latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
